

#include "stm32f446_i2c_driver.h"
void I2C_PeriClockControl(I2C_RegDef_t *pI2Cx, uint8_t EnorDi)
{
	if(EnorDi == ENABLE)
	{
		if(pI2Cx == I2C1)
		{
			I2C1_PCLK_EN();
		}else if (pI2Cx == I2C2)
		{
			I2C2_PCLK_EN();
		}else if (pI2Cx == I2C3)
		{
			I2C3_PCLK_EN();
		}
	}
	else
	{
		//TODO
	}

}
uint32_t RCC_GetPLLout(void)
{
	return 0 ;
}
uint16_t AHB_PreScaler[8]={2,4,8,16,64,128,256,512};
uint16_t APB1_PreScaler[4]={2,4,8,16};

uint32_t RCC_GetPCLK1Value(void)
{
	uint32_t pclk1,SystemClk;
	uint8_t clksrc,temp,ahbp;

	clksrc  = (RCC->CFGR >>2)&0x3;
	if(clksrc == 0)
	{
		SystemClk = 16000000;
	}else if(clksrc == 1)
	{
		SystemClk = 8000000;
	}else if(clksrc == 2)
	{
		SystemClk = RCC_GetPLLout();
	}
	temp = (RCC->CFGR >>4)&0xF; // 2^4
	if(temp < 8 )
	{
		ahbp =1;
	}else
	{
		ahbp = AHB_PreScaler[temp-8];
	}
	temp = (RCC->CFGR >>10)&0x3; // 2^4
	if(temp < 4 )
	{
		ahbp =1;
	}else
	{
		ahbp = APB1_PreScaler[temp-4];
	}





	return pclk1;
}
